use super::*;

#[repr(transparent)]
#[derive(Clone, Copy, PartialEq)]
pub struct CursorKind(i32);

impl std::fmt::Debug for CursorKind {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(f, "{}", self.spelling())
    }
}

impl std::fmt::Display for CursorKind {
    fn fmt(&self, fmt: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(fmt, "{}", self.spelling())
    }
}

impl CursorKind {
    pub fn spelling(&self) -> Owned<CXString> {
        link!("libclang.dll" "system" fn clang_getCursorKindSpelling(_: CursorKind) -> CXString);
        unsafe { Owned::new(clang_getCursorKindSpelling(*self)) }
    }

    pub const UnexposedDecl: Self = Self(1);
    pub const StructDecl: Self = Self(2);
    pub const UnionDecl: Self = Self(3);
    pub const ClassDecl: Self = Self(4);
    pub const EnumDecl: Self = Self(5);
    pub const FieldDecl: Self = Self(6);
    pub const EnumConstantDecl: Self = Self(7);
    pub const FunctionDecl: Self = Self(8);
    pub const VarDecl: Self = Self(9);
    pub const ParmDecl: Self = Self(10);
    pub const ObjCInterfaceDecl: Self = Self(11);
    pub const ObjCCategoryDecl: Self = Self(12);
    pub const ObjCProtocolDecl: Self = Self(13);
    pub const ObjCPropertyDecl: Self = Self(14);
    pub const ObjCIvarDecl: Self = Self(15);
    pub const ObjCInstanceMethodDecl: Self = Self(16);
    pub const ObjCClassMethodDecl: Self = Self(17);
    pub const ObjCImplementationDecl: Self = Self(18);
    pub const ObjCCategoryImplDecl: Self = Self(19);
    pub const TypedefDecl: Self = Self(20);
    pub const CXXMethod: Self = Self(21);
    pub const Namespace: Self = Self(22);
    pub const LinkageSpec: Self = Self(23);
    pub const Constructor: Self = Self(24);
    pub const Destructor: Self = Self(25);
    pub const ConversionFunction: Self = Self(26);
    pub const TemplateTypeParameter: Self = Self(27);
    pub const NonTypeTemplateParameter: Self = Self(28);
    pub const TemplateTemplateParameter: Self = Self(29);
    pub const FunctionTemplate: Self = Self(30);
    pub const ClassTemplate: Self = Self(31);
    pub const ClassTemplatePartialSpecialization: Self = Self(32);
    pub const NamespaceAlias: Self = Self(33);
    pub const UsingDirective: Self = Self(34);
    pub const UsingDeclaration: Self = Self(35);
    pub const TypeAliasDecl: Self = Self(36);
    pub const ObjCSynthesizeDecl: Self = Self(37);
    pub const ObjCDynamicDecl: Self = Self(38);
    pub const CXXAccessSpecifier: Self = Self(39);
    pub const FirstDecl: Self = Self::UnexposedDecl;
    pub const LastDecl: Self = Self::CXXAccessSpecifier;
    pub const FirstRef: Self = Self(40);
    pub const ObjCSuperClassRef: Self = Self(40);
    pub const ObjCProtocolRef: Self = Self(41);
    pub const ObjCClassRef: Self = Self(42);
    pub const TypeRef: Self = Self(43);
    pub const CXXBaseSpecifier: Self = Self(44);
    pub const TemplateRef: Self = Self(45);
    pub const NamespaceRef: Self = Self(46);
    pub const MemberRef: Self = Self(47);
    pub const LabelRef: Self = Self(48);
    pub const OverloadedDeclRef: Self = Self(49);
    pub const VariableRef: Self = Self(50);
    pub const LastRef: Self = Self::VariableRef;
    pub const FirstInvalid: Self = Self(70);
    pub const InvalidFile: Self = Self(70);
    pub const NoDeclFound: Self = Self(71);
    pub const NotImplemented: Self = Self(72);
    pub const InvalidCode: Self = Self(73);
    pub const LastInvalid: Self = Self::InvalidCode;
    pub const FirstExpr: Self = Self(100);
    pub const UnexposedExpr: Self = Self(100);
    pub const DeclRefExpr: Self = Self(101);
    pub const MemberRefExpr: Self = Self(102);
    pub const CallExpr: Self = Self(103);
    pub const ObjCMessageExpr: Self = Self(104);
    pub const BlockExpr: Self = Self(105);
    pub const IntegerLiteral: Self = Self(106);
    pub const FloatingLiteral: Self = Self(107);
    pub const ImaginaryLiteral: Self = Self(108);
    pub const StringLiteral: Self = Self(109);
    pub const CharacterLiteral: Self = Self(110);
    pub const ParenExpr: Self = Self(111);
    pub const UnaryOperator: Self = Self(112);
    pub const ArraySubscriptExpr: Self = Self(113);
    pub const BinaryOperator: Self = Self(114);
    pub const CompoundAssignOperator: Self = Self(115);
    pub const ConditionalOperator: Self = Self(116);
    pub const CStyleCastExpr: Self = Self(117);
    pub const CompoundLiteralExpr: Self = Self(118);
    pub const InitListExpr: Self = Self(119);
    pub const AddrLabelExpr: Self = Self(120);
    pub const StmtExpr: Self = Self(121);
    pub const GenericSelectionExpr: Self = Self(122);
    pub const GNUNullExpr: Self = Self(123);
    pub const CXXStaticCastExpr: Self = Self(124);
    pub const CXXDynamicCastExpr: Self = Self(125);
    pub const CXXReinterpretCastExpr: Self = Self(126);
    pub const CXXConstCastExpr: Self = Self(127);
    pub const CXXFunctionalCastExpr: Self = Self(128);
    pub const CXXTypeidExpr: Self = Self(129);
    pub const CXXBoolLiteralExpr: Self = Self(130);
    pub const CXXNullPtrLiteralExpr: Self = Self(131);
    pub const CXXThisExpr: Self = Self(132);
    pub const CXXThrowExpr: Self = Self(133);
    pub const CXXNewExpr: Self = Self(134);
    pub const CXXDeleteExpr: Self = Self(135);
    pub const UnaryExpr: Self = Self(136);
    pub const ObjCStringLiteral: Self = Self(137);
    pub const ObjCEncodeExpr: Self = Self(138);
    pub const ObjCSelectorExpr: Self = Self(139);
    pub const ObjCProtocolExpr: Self = Self(140);
    pub const ObjCBridgedCastExpr: Self = Self(141);
    pub const PackExpansionExpr: Self = Self(142);
    pub const SizeOfPackExpr: Self = Self(143);
    pub const LambdaExpr: Self = Self(144);
    pub const ObjCBoolLiteralExpr: Self = Self(145);
    pub const ObjCSelfExpr: Self = Self(146);
    pub const ArraySectionExpr: Self = Self(147);
    pub const ObjCAvailabilityCheckExpr: Self = Self(148);
    pub const FixedPointLiteral: Self = Self(149);
    pub const OMPArrayShapingExpr: Self = Self(150);
    pub const OMPIteratorExpr: Self = Self(151);
    pub const CXXAddrspaceCastExpr: Self = Self(152);
    pub const ConceptSpecializationExpr: Self = Self(153);
    pub const RequiresExpr: Self = Self(154);
    pub const CXXParenListInitExpr: Self = Self(155);
    pub const PackIndexingExpr: Self = Self(156);
    pub const LastExpr: Self = Self::PackIndexingExpr;
    pub const FirstStmt: Self = Self(200);
    pub const UnexposedStmt: Self = Self(200);
    pub const LabelStmt: Self = Self(201);
    pub const CompoundStmt: Self = Self(202);
    pub const CaseStmt: Self = Self(203);
    pub const DefaultStmt: Self = Self(204);
    pub const IfStmt: Self = Self(205);
    pub const SwitchStmt: Self = Self(206);
    pub const WhileStmt: Self = Self(207);
    pub const DoStmt: Self = Self(208);
    pub const ForStmt: Self = Self(209);
    pub const GotoStmt: Self = Self(210);
    pub const IndirectGotoStmt: Self = Self(211);
    pub const ContinueStmt: Self = Self(212);
    pub const BreakStmt: Self = Self(213);
    pub const ReturnStmt: Self = Self(214);
    pub const GCCAsmStmt: Self = Self(215);
    pub const AsmStmt: Self = Self::GCCAsmStmt;
    pub const ObjCAtTryStmt: Self = Self(216);
    pub const ObjCAtCatchStmt: Self = Self(217);
    pub const ObjCAtFinallyStmt: Self = Self(218);
    pub const ObjCAtThrowStmt: Self = Self(219);
    pub const ObjCAtSynchronizedStmt: Self = Self(220);
    pub const ObjCAutoreleasePoolStmt: Self = Self(221);
    pub const ObjCForCollectionStmt: Self = Self(222);
    pub const CXXCatchStmt: Self = Self(223);
    pub const CXXTryStmt: Self = Self(224);
    pub const CXXForRangeStmt: Self = Self(225);
    pub const SEHTryStmt: Self = Self(226);
    pub const SEHExceptStmt: Self = Self(227);
    pub const SEHFinallyStmt: Self = Self(228);
    pub const MSAsmStmt: Self = Self(229);
    pub const NullStmt: Self = Self(230);
    pub const DeclStmt: Self = Self(231);
    pub const OMPParallelDirective: Self = Self(232);
    pub const OMPSimdDirective: Self = Self(233);
    pub const OMPForDirective: Self = Self(234);
    pub const OMPSectionsDirective: Self = Self(235);
    pub const OMPSectionDirective: Self = Self(236);
    pub const OMPSingleDirective: Self = Self(237);
    pub const OMPParallelForDirective: Self = Self(238);
    pub const OMPParallelSectionsDirective: Self = Self(239);
    pub const OMPTaskDirective: Self = Self(240);
    pub const OMPMasterDirective: Self = Self(241);
    pub const OMPCriticalDirective: Self = Self(242);
    pub const OMPTaskyieldDirective: Self = Self(243);
    pub const OMPBarrierDirective: Self = Self(244);
    pub const OMPTaskwaitDirective: Self = Self(245);
    pub const OMPFlushDirective: Self = Self(246);
    pub const SEHLeaveStmt: Self = Self(247);
    pub const OMPOrderedDirective: Self = Self(248);
    pub const OMPAtomicDirective: Self = Self(249);
    pub const OMPForSimdDirective: Self = Self(250);
    pub const OMPParallelForSimdDirective: Self = Self(251);
    pub const OMPTargetDirective: Self = Self(252);
    pub const OMPTeamsDirective: Self = Self(253);
    pub const OMPTaskgroupDirective: Self = Self(254);
    pub const OMPCancellationPointDirective: Self = Self(255);
    pub const OMPCancelDirective: Self = Self(256);
    pub const OMPTargetDataDirective: Self = Self(257);
    pub const OMPTaskLoopDirective: Self = Self(258);
    pub const OMPTaskLoopSimdDirective: Self = Self(259);
    pub const OMPDistributeDirective: Self = Self(260);
    pub const OMPTargetEnterDataDirective: Self = Self(261);
    pub const OMPTargetExitDataDirective: Self = Self(262);
    pub const OMPTargetParallelDirective: Self = Self(263);
    pub const OMPTargetParallelForDirective: Self = Self(264);
    pub const OMPTargetUpdateDirective: Self = Self(265);
    pub const OMPDistributeParallelForDirective: Self = Self(266);
    pub const OMPDistributeParallelForSimdDirective: Self = Self(267);
    pub const OMPDistributeSimdDirective: Self = Self(268);
    pub const OMPTargetParallelForSimdDirective: Self = Self(269);
    pub const OMPTargetSimdDirective: Self = Self(270);
    pub const OMPTeamsDistributeDirective: Self = Self(271);
    pub const OMPTeamsDistributeSimdDirective: Self = Self(272);
    pub const OMPTeamsDistributeParallelForSimdDirective: Self = Self(273);
    pub const OMPTeamsDistributeParallelForDirective: Self = Self(274);
    pub const OMPTargetTeamsDirective: Self = Self(275);
    pub const OMPTargetTeamsDistributeDirective: Self = Self(276);
    pub const OMPTargetTeamsDistributeParallelForDirective: Self = Self(277);
    pub const OMPTargetTeamsDistributeParallelForSimdDirective: Self = Self(278);
    pub const OMPTargetTeamsDistributeSimdDirective: Self = Self(279);
    pub const BuiltinBitCastExpr: Self = Self(280);
    pub const OMPMasterTaskLoopDirective: Self = Self(281);
    pub const OMPParallelMasterTaskLoopDirective: Self = Self(282);
    pub const OMPMasterTaskLoopSimdDirective: Self = Self(283);
    pub const OMPParallelMasterTaskLoopSimdDirective: Self = Self(284);
    pub const OMPParallelMasterDirective: Self = Self(285);
    pub const OMPDepobjDirective: Self = Self(286);
    pub const OMPScanDirective: Self = Self(287);
    pub const OMPTileDirective: Self = Self(288);
    pub const OMPCanonicalLoop: Self = Self(289);
    pub const OMPInteropDirective: Self = Self(290);
    pub const OMPDispatchDirective: Self = Self(291);
    pub const OMPMaskedDirective: Self = Self(292);
    pub const OMPUnrollDirective: Self = Self(293);
    pub const OMPMetaDirective: Self = Self(294);
    pub const OMPGenericLoopDirective: Self = Self(295);
    pub const OMPTeamsGenericLoopDirective: Self = Self(296);
    pub const OMPTargetTeamsGenericLoopDirective: Self = Self(297);
    pub const OMPParallelGenericLoopDirective: Self = Self(298);
    pub const OMPTargetParallelGenericLoopDirective: Self = Self(299);
    pub const OMPParallelMaskedDirective: Self = Self(300);
    pub const OMPMaskedTaskLoopDirective: Self = Self(301);
    pub const OMPMaskedTaskLoopSimdDirective: Self = Self(302);
    pub const OMPParallelMaskedTaskLoopDirective: Self = Self(303);
    pub const OMPParallelMaskedTaskLoopSimdDirective: Self = Self(304);
    pub const OMPErrorDirective: Self = Self(305);
    pub const OMPScopeDirective: Self = Self(306);
    pub const OMPReverseDirective: Self = Self(307);
    pub const OMPInterchangeDirective: Self = Self(308);
    pub const OpenACCComputeConstruct: Self = Self(320);
    pub const OpenACCLoopConstruct: Self = Self(321);
    pub const LastStmt: Self = Self::OpenACCLoopConstruct;
    pub const TranslationUnit: Self = Self(350);
    pub const FirstAttr: Self = Self(400);
    pub const UnexposedAttr: Self = Self(400);
    pub const IBActionAttr: Self = Self(401);
    pub const IBOutletAttr: Self = Self(402);
    pub const IBOutletCollectionAttr: Self = Self(403);
    pub const CXXFinalAttr: Self = Self(404);
    pub const CXXOverrideAttr: Self = Self(405);
    pub const AnnotateAttr: Self = Self(406);
    pub const AsmLabelAttr: Self = Self(407);
    pub const PackedAttr: Self = Self(408);
    pub const PureAttr: Self = Self(409);
    pub const ConstAttr: Self = Self(410);
    pub const NoDuplicateAttr: Self = Self(411);
    pub const CUDAConstantAttr: Self = Self(412);
    pub const CUDADeviceAttr: Self = Self(413);
    pub const CUDAGlobalAttr: Self = Self(414);
    pub const CUDAHostAttr: Self = Self(415);
    pub const CUDASharedAttr: Self = Self(416);
    pub const VisibilityAttr: Self = Self(417);
    pub const DLLExport: Self = Self(418);
    pub const DLLImport: Self = Self(419);
    pub const NSReturnsRetained: Self = Self(420);
    pub const NSReturnsNotRetained: Self = Self(421);
    pub const NSReturnsAutoreleased: Self = Self(422);
    pub const NSConsumesSelf: Self = Self(423);
    pub const NSConsumed: Self = Self(424);
    pub const ObjCException: Self = Self(425);
    pub const ObjCNSObject: Self = Self(426);
    pub const ObjCIndependentClass: Self = Self(427);
    pub const ObjCPreciseLifetime: Self = Self(428);
    pub const ObjCReturnsInnerPointer: Self = Self(429);
    pub const ObjCRequiresSuper: Self = Self(430);
    pub const ObjCRootClass: Self = Self(431);
    pub const ObjCSubclassingRestricted: Self = Self(432);
    pub const ObjCExplicitProtocolImpl: Self = Self(433);
    pub const ObjCDesignatedInitializer: Self = Self(434);
    pub const ObjCRuntimeVisible: Self = Self(435);
    pub const ObjCBoxable: Self = Self(436);
    pub const FlagEnum: Self = Self(437);
    pub const ConvergentAttr: Self = Self(438);
    pub const WarnUnusedAttr: Self = Self(439);
    pub const WarnUnusedResultAttr: Self = Self(440);
    pub const AlignedAttr: Self = Self(441);
    pub const LastAttr: Self = Self::AlignedAttr;
    pub const PreprocessingDirective: Self = Self(500);
    pub const MacroDefinition: Self = Self(501);
    pub const MacroExpansion: Self = Self(502);
    pub const MacroInstantiation: Self = Self::MacroExpansion;
    pub const InclusionDirective: Self = Self(503);
    pub const FirstPreprocessing: Self = Self::PreprocessingDirective;
    pub const LastPreprocessing: Self = Self::InclusionDirective;
    pub const ModuleImportDecl: Self = Self(600);
    pub const TypeAliasTemplateDecl: Self = Self(601);
    pub const StaticAssert: Self = Self(602);
    pub const FriendDecl: Self = Self(603);
    pub const ConceptDecl: Self = Self(604);
    pub const FirstExtraDecl: Self = Self::ModuleImportDecl;
    pub const LastExtraDecl: Self = Self::ConceptDecl;
    pub const OverloadCandidate: Self = Self(700);
}
